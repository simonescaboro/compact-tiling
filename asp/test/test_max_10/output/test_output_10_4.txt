clingo version 5.4.0
Reading from test/test2/input/test_10_4.lp ...
Solving...
Answer: 1
pieces_on(1,1,4,2) pieces_on(1,1,5,2) pieces_on(1,1,4,3) pieces_on(1,1,5,3) pieces_on(1,2,3,4) pieces_on(1,2,4,4) pieces_on(1,2,3,5) pieces_on(1,2,4,5) pieces_on(2,1,3,1) pieces_on(2,1,4,1) pieces_on(2,1,5,1) pieces_on(2,2,5,4) pieces_on(2,2,5,5) pieces_on(2,2,5,6) pieces_on(3,1,2,2) pieces_on(3,1,3,2) pieces_on(3,1,3,3) pieces_on(3,2,1,2) pieces_on(3,2,1,3) pieces_on(3,2,2,3) pieces_on(4,1,2,4) pieces_on(4,1,2,5) pieces_on(4,1,1,6) pieces_on(4,1,2,6) pieces_on(4,1,3,6) max_row(5) max_col(6)
Optimization: 1 30
Answer: 2
pieces_on(1,1,4,2) pieces_on(1,1,5,2) pieces_on(1,1,4,3) pieces_on(1,1,5,3) pieces_on(1,2,3,4) pieces_on(1,2,4,4) pieces_on(1,2,3,5) pieces_on(1,2,4,5) pieces_on(2,1,1,4) pieces_on(2,1,1,5) pieces_on(2,1,1,6) pieces_on(2,2,4,8) pieces_on(2,2,5,8) pieces_on(2,2,6,8) pieces_on(3,1,6,3) pieces_on(3,1,5,4) pieces_on(3,1,6,4) pieces_on(3,2,1,1) pieces_on(3,2,2,1) pieces_on(3,2,1,2) pieces_on(4,1,4,1) pieces_on(4,1,10,1) pieces_on(4,1,2,2) pieces_on(4,1,10,2) pieces_on(4,1,1,8) max_row(10) max_col(8)
Optimization: 0 80
Answer: 3
pieces_on(1,1,4,2) pieces_on(1,1,5,2) pieces_on(1,1,4,3) pieces_on(1,1,5,3) pieces_on(1,2,3,4) pieces_on(1,2,4,4) pieces_on(1,2,3,5) pieces_on(1,2,4,5) pieces_on(2,1,1,4) pieces_on(2,1,1,5) pieces_on(2,1,1,6) pieces_on(2,2,7,5) pieces_on(2,2,8,5) pieces_on(2,2,9,5) pieces_on(3,1,6,3) pieces_on(3,1,5,4) pieces_on(3,1,6,4) pieces_on(3,2,1,1) pieces_on(3,2,2,1) pieces_on(3,2,1,2) pieces_on(4,1,4,1) pieces_on(4,1,9,1) pieces_on(4,1,10,1) pieces_on(4,1,2,2) pieces_on(4,1,10,2) max_row(10) max_col(6)
Optimization: 0 60
Answer: 4
pieces_on(1,1,4,2) pieces_on(1,1,5,2) pieces_on(1,1,4,3) pieces_on(1,1,5,3) pieces_on(1,2,3,4) pieces_on(1,2,4,4) pieces_on(1,2,3,5) pieces_on(1,2,4,5) pieces_on(2,1,3,1) pieces_on(2,1,3,2) pieces_on(2,1,3,3) pieces_on(2,2,8,4) pieces_on(2,2,9,4) pieces_on(2,2,10,4) pieces_on(3,1,6,3) pieces_on(3,1,5,4) pieces_on(3,1,6,4) pieces_on(3,2,1,1) pieces_on(3,2,2,1) pieces_on(3,2,1,2) pieces_on(4,1,4,1) pieces_on(4,1,9,1) pieces_on(4,1,10,1) pieces_on(4,1,2,2) pieces_on(4,1,10,2) max_row(10) max_col(5)
Optimization: 0 50
Answer: 5
pieces_on(1,1,4,2) pieces_on(1,1,5,2) pieces_on(1,1,4,3) pieces_on(1,1,5,3) pieces_on(1,2,3,7) pieces_on(1,2,4,7) pieces_on(1,2,3,8) pieces_on(1,2,4,8) pieces_on(2,1,3,2) pieces_on(2,1,3,3) pieces_on(2,1,3,4) pieces_on(2,2,5,5) pieces_on(2,2,5,6) pieces_on(2,2,5,7) pieces_on(3,1,2,8) pieces_on(3,1,1,9) pieces_on(3,1,2,9) pieces_on(3,2,1,1) pieces_on(3,2,2,1) pieces_on(3,2,1,2) pieces_on(4,1,1,5) pieces_on(4,1,2,5) pieces_on(4,1,3,5) pieces_on(4,1,2,6) pieces_on(4,1,2,7) max_row(5) max_col(9)
Optimization: 0 45
Answer: 6
pieces_on(1,1,4,3) pieces_on(1,1,5,3) pieces_on(1,1,4,4) pieces_on(1,1,5,4) pieces_on(1,2,6,3) pieces_on(1,2,7,3) pieces_on(1,2,6,4) pieces_on(1,2,7,4) pieces_on(2,1,5,2) pieces_on(2,1,6,2) pieces_on(2,1,7,2) pieces_on(2,2,9,1) pieces_on(2,2,9,2) pieces_on(2,2,9,3) pieces_on(3,1,2,1) pieces_on(3,1,1,2) pieces_on(3,1,2,2) pieces_on(3,2,1,1) pieces_on(3,2,10,1) pieces_on(3,2,10,4) pieces_on(4,1,5,1) pieces_on(4,1,6,1) pieces_on(4,1,7,1) pieces_on(4,1,10,3) pieces_on(4,1,2,4) max_row(10) max_col(4)
Optimization: 0 40
Answer: 7
pieces_on(1,1,1,2) pieces_on(1,1,2,2) pieces_on(1,1,1,3) pieces_on(1,1,2,3) pieces_on(1,2,2,7) pieces_on(1,2,3,7) pieces_on(1,2,2,8) pieces_on(1,2,3,8) pieces_on(2,1,3,1) pieces_on(2,1,3,2) pieces_on(2,1,3,3) pieces_on(2,2,3,4) pieces_on(2,2,3,5) pieces_on(2,2,3,6) pieces_on(3,1,1,4) pieces_on(3,1,2,4) pieces_on(3,1,2,5) pieces_on(3,2,1,6) pieces_on(3,2,2,6) pieces_on(3,2,1,7) pieces_on(4,1,1,1) pieces_on(4,1,1,9) pieces_on(4,1,2,9) pieces_on(4,1,3,9) pieces_on(4,1,3,10) max_row(3) max_col(10)
Optimization: 0 30
Progression : 0 [ 8;30] (Error: 2.75)
Answer: 8
pieces_on(1,1,1,3) pieces_on(1,1,2,3) pieces_on(1,1,1,4) pieces_on(1,1,2,4) pieces_on(1,2,1,1) pieces_on(1,2,2,1) pieces_on(1,2,1,2) pieces_on(1,2,2,2) pieces_on(2,1,2,7) pieces_on(2,1,3,7) pieces_on(2,1,4,7) pieces_on(2,2,1,5) pieces_on(2,2,1,6) pieces_on(2,2,1,7) pieces_on(3,1,4,1) pieces_on(3,1,3,2) pieces_on(3,1,4,2) pieces_on(3,2,3,3) pieces_on(3,2,4,3) pieces_on(3,2,4,4) pieces_on(4,1,3,4) pieces_on(4,1,3,5) pieces_on(4,1,2,6) pieces_on(4,1,3,6) pieces_on(4,1,4,6) max_row(4) max_col(7)
Optimization: 0 28
Answer: 9
pieces_on(1,1,8,2) pieces_on(1,1,9,2) pieces_on(1,1,8,3) pieces_on(1,1,9,3) pieces_on(1,2,3,2) pieces_on(1,2,4,2) pieces_on(1,2,3,3) pieces_on(1,2,4,3) pieces_on(2,1,2,1) pieces_on(2,1,2,2) pieces_on(2,1,2,3) pieces_on(2,2,1,1) pieces_on(2,2,1,2) pieces_on(2,2,1,3) pieces_on(3,1,7,1) pieces_on(3,1,8,1) pieces_on(3,1,7,2) pieces_on(3,2,4,1) pieces_on(3,2,5,1) pieces_on(3,2,5,2) pieces_on(4,1,6,1) pieces_on(4,1,6,2) pieces_on(4,1,5,3) pieces_on(4,1,6,3) pieces_on(4,1,7,3) max_row(9) max_col(3)
Optimization: 0 27
Answer: 10
pieces_on(1,1,4,4) pieces_on(1,1,5,4) pieces_on(1,1,4,5) pieces_on(1,1,5,5) pieces_on(1,2,3,1) pieces_on(1,2,4,1) pieces_on(1,2,3,2) pieces_on(1,2,4,2) pieces_on(2,1,5,1) pieces_on(2,1,5,2) pieces_on(2,1,5,3) pieces_on(2,2,1,2) pieces_on(2,2,1,3) pieces_on(2,2,1,4) pieces_on(3,1,1,1) pieces_on(3,1,2,1) pieces_on(3,1,2,2) pieces_on(3,2,2,4) pieces_on(3,2,1,5) pieces_on(3,2,2,5) pieces_on(4,1,2,3) pieces_on(4,1,3,3) pieces_on(4,1,4,3) pieces_on(4,1,3,4) pieces_on(4,1,3,5) max_row(5) max_col(5)
Optimization: 0 25
Progression : 0 [10;25] (Error: 1.5)
Progression : 0 [12;25] (Error: 1.08333)
Progression : 0 [14;25] (Error: 0.785714)
Progression : 0 [15;25] (Error: 0.666667)
Progression : 0 [16;25] (Error: 0.5625)
Progression : 0 [17;25] (Error: 0.470588)
Progression : 0 [18;25] (Error: 0.388889)
Progression : 0 [19;25] (Error: 0.315789)
Progression : 0 [20;25] (Error: 0.25)
Progression : 0 [21;25] (Error: 0.190476)
Progression : 0 [22;25] (Error: 0.136364)
Progression : 0 [23;25] (Error: 0.0869565)
Progression : 0 [24;25] (Error: 0.0416667)
OPTIMUM FOUND

Models       : 10
  Optimum    : yes
Optimization : 0 25
Calls        : 1
Time         : 1.467s (Solving: 1.44s 1st Model: 0.00s Unsat: 1.39s)
CPU Time     : 4.880s
Threads      : 4        (Winner: 3)
